# -*- coding: utf-8 -*-
"""project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gVrZW_ANEjucCyQRDvBgHj4Wk-v6xQ08
"""

#Firstly, I am going to mention all the steps necessary for analysing data
#1. Take the data and create a dataframe
#2. Preprocessing
#3. Data Visualization
#4. Divide into input & Output
#5. Train & Test variables
#6. Normalize the data
#7. Run a classifier
#8. Fit the model
#9. Predict the output
#10. Evaluation
#Dataset="https://raw.githubusercontent.com/barshan94/Dataset/main/cancer%20patient%20data%20sets.csv"

#step-1:
import pandas as pd
df=pd.read_csv("https://raw.githubusercontent.com/barshan94/Dataset/main/cancer%20patient%20data%20sets.csv")
df

#step-2:
#As, there are one collumn including categorical value I need to apply pre processing.
from sklearn import preprocessing
label_encoder = preprocessing.LabelEncoder()
df['Patient Id']= label_encoder.fit_transform(df['Patient Id'])
df['Patient Id'].unique()

#step-3.1
import matplotlib.pyplot as plt
plt.scatter(df['Age'],df['Level'])
plt.title('Age vs Level')
plt.xlabel('Age')
plt.ylabel('Level')

#step-3.2
import matplotlib.pyplot as plt
plt.scatter(df['Gender'],df['Level'])
plt.title('Gender vs Level')
plt.xlabel('Gender')
plt.ylabel('Level')

#step-3.3
import matplotlib.pyplot as plt
plt.scatter(df['Air Pollution'],df['Level'])
plt.title('Air Pollution vs Level')
plt.xlabel('Air Pollution')
plt.ylabel('Level')

#step-3.4
import matplotlib.pyplot as plt
plt.scatter(df['Alcohol use'],df['Level'])
plt.title('Alcohol use vs Level')
plt.xlabel('Alcohol use')
plt.ylabel('Level')

#step-3.5
import matplotlib.pyplot as plt
plt.scatter(df['Dust Allergy'],df['Level'])
plt.title('Dust Allergy vs Level')
plt.xlabel('Dust Allergy')
plt.ylabel('Level')

#step-3.6
import matplotlib.pyplot as plt
plt.scatter(df['OccuPational Hazards'],df['Level'])
plt.title('OccuPational Hazards vs Level')
plt.xlabel('OccuPational Hazards')
plt.ylabel('Level')

#step-3.7
import matplotlib.pyplot as plt
plt.scatter(df['chronic Lung Disease'],df['Level'])
plt.title('chronic Lung Disease vs Level')
plt.xlabel('chronic Lung Disease')
plt.ylabel('Level')

#step-3.8
import matplotlib.pyplot as plt
plt.scatter(df['Balanced Diet'],df['Level'])
plt.title('Balanced Diet vs Level')
plt.xlabel('Balanced Diet')
plt.ylabel('Level')

#step-3.9
import matplotlib.pyplot as plt
plt.scatter(df['Obesity'],df['Level'])
plt.title('Obesity vs Level')
plt.xlabel('Obesity')
plt.ylabel('Level')

#step-3.10
import matplotlib.pyplot as plt
plt.scatter(df['Smoking'],df['Level'])
plt.title('Smoking vs Level')
plt.xlabel('Smoking')
plt.ylabel('Level')

#step-3.11
import matplotlib.pyplot as plt
plt.scatter(df['Passive Smoker'],df['Level'])
plt.title('Passive Smoker vs Level')
plt.xlabel('Passive Smoker')
plt.ylabel('Level')

#step-3.12
import matplotlib.pyplot as plt
plt.scatter(df['Chest Pain'],df['Level'])
plt.title('Chest Pain vs Level')
plt.xlabel('Chest Pain')
plt.ylabel('Level')

#step-3.13
import matplotlib.pyplot as plt
plt.scatter(df['Coughing of Blood'],df['Level'])
plt.title('Coughing of Blood vs Level')
plt.xlabel('Coughing of Blood')
plt.ylabel('Level')

#step-3.14
import matplotlib.pyplot as plt
plt.scatter(df['Fatigue'],df['Level'])
plt.title('Fatigue vs Level')
plt.xlabel('Fatigue')
plt.ylabel('Level')

#step-3.15
import matplotlib.pyplot as plt
plt.scatter(df['Weight Loss'],df['Level'])
plt.title('Weight Loss vs Level')
plt.xlabel('Weight Loss')
plt.ylabel('Level')

#step-3.16
import matplotlib.pyplot as plt
plt.scatter(df['Shortness of Breath'],df['Level'])
plt.title('Shortness of Breath vs Level')
plt.xlabel('Shortness of Breath')
plt.ylabel('Level')

#step-3.17
import matplotlib.pyplot as plt
plt.scatter(df['Wheezing'],df['Level'])
plt.title('Wheezing vs Level')
plt.xlabel('Wheezing')
plt.ylabel('Level')

#step-3.18
import matplotlib.pyplot as plt
plt.scatter(df['Swallowing Difficulty'],df['Level'])
plt.title('Swallowing Difficulty vs Level')
plt.xlabel('Swallowing Difficulty')
plt.ylabel('Level')

#step-3.19
import matplotlib.pyplot as plt
plt.scatter(df['Clubbing of Finger Nails'],df['Level'])
plt.title('Clubbing of Finger Nails vs Level')
plt.xlabel('Clubbing of Finger Nails')
plt.ylabel('Level')

#step-3.20
import matplotlib.pyplot as plt
plt.scatter(df['Frequent Cold'],df['Level'])
plt.title('Frequent Cold vs Level')
plt.xlabel('Frequent Cold')
plt.ylabel('Level')

#step-3.21
import matplotlib.pyplot as plt
plt.scatter(df['Dry Cough'],df['Level'])
plt.title('Dry Cough vs Level')
plt.xlabel('Dry Cough')
plt.ylabel('Level')

#step-3.22
import matplotlib.pyplot as plt
plt.scatter(df['Snoring'],df['Level'])
plt.title('Snoring vs Level')
plt.xlabel('Snoring')
plt.ylabel('Level')

#step-4
x=df.iloc[:,0:24].values
x

#step-4.1
y=df.iloc[:,24].values
y

#step-5
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)

#step 5.1-
print(x.shape)
print(x_train.shape)
print(x_test.shape)

#step-5.2:
print(y.shape)
print(y_train.shape)
print(y_test.shape)

#step-6
#As there is no fractional or decimal place value 
#we donot normalize the data

#step-7
from sklearn.linear_model import LogisticRegression
log_model = LogisticRegression(solver='lbfgs', max_iter=1000000000)

#step-8
log_model.fit(x_train,y_train)

#step-9
y_pred=log_model.predict(x_test)
y_pred

y_test

#step-10
from sklearn.metrics import accuracy_score
accuracy_score(y_pred,y_test)*100

log_model.predict([[1,33,1,2,4,5,4,3,2,2,4,3,2,2,4,3,4,2,2,3,1,2,3,4]])

log_model.predict([[985,37,1,1,2,3,4,2,4,3,3,3,2,3,4,4,1,2,4,6,5,4,2,5]])

log_model.predict([[1100,41,2,5,7,5,1,5,6,7,8,6,7,5,6,9,5,5,4,6,5,4,2,5]])

#Finished
#Done by Barshan Ghosh
#AI-09-SPB3

